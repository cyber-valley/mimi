#+title: Mimi president
#+author: aishift

* Table of contents                                          :toc_3:noexport:
- [[#problem][Problem]]
- [[#solution][Solution]]
  - [[#announce][Announce]]
  - [[#implementation-details][Implementation details]]
    - [[#embedding-model][Embedding model]]
    - [[#llm-chat-bot][LLM chat bot]]
    - [[#data-store][Data store]]
    - [[#programming-language][Programming language]]
    - [[#parsing][Parsing]]
- [[#feature-improves][Feature improves]]

* Problem

Rapidly developing Cyber Valley project has a diverse sources of truth represented in the following resources:

- X.com tweets
- Telegram group chat messages
- Logseq knowledge base git repositories
- GitHub issues

Searching all of them becomes a time consuming process and requires a simple way of querying all of them at one time.

* Solution

** Announce

Develop RAG over all mentioned in the problem statement resources and provide LLM driven chat bot, which allows interactively and in a free form query all of them at once.

** Implementation details

*** Embedding model

We keep in mind, that in the future it could be great to change chosen model, but it requires complete recalculation for the whole dataset (because of different dimensions and algorithms in general). To handle it we will store all source data "as is", so making embedding will be the question of computation.

For the POC we will stick to the OpenAi [[https://platform.openai.com/docs/guides/embeddings#embedding-models][text-embedding-3-small]] which is pretty cheap and should work good enough.

[[file:img/embedding-model-pricing.png]]

*** LLM chat bot

Our solution completely model agnostic, so any provider could be used and switched on the fly

*** Data store

We choose [[https://docs.turso.tech/introduction][Turso]] as our DBM, it works perfectly with vector search and greatly scales on HDD drives and has zero network latency because it's built on [[https://github.com/tursodatabase/libsql/][libSQL]].

*** Programming language

We will use Python & [[https://www.langchain.com/langchain][LangChain]] for the project because it'll be need just a glue between io operations. Rust wouldn't make a visible difference in speed or durability and lacks of ready to use packages for the fast ideas testing.

*** Parsing

**** X.com

We don't know for sure the general required amount of accounts and their requirement and their publicity. So for the start and completely for free it's possible to use Google news RSS. As an example here is the RSS feed generated for the [[https://x.com/levelsio][@levelsio]] - https://news.google.com/rss/search?q=site:twitter.com/levelsio+when:7

**** Telegram groups

We offer to use [[https://core.telegram.org/#telegram-api][Telegram Client API]]. It requires own telegram account but in exchange it has access to the whole history of messages (in super groups where it's allowed). Algorithm of the adding support of the new group will be the same as adding new participant to the group. Then we will download all messages history (with the given threshold or fully), then listen to new messages and process them as well.

**** GitHub

We can use [[https://docs.github.com/en/webhooks/webhook-events-and-payloads][Webhooks API]] to get updates on commits to the LogSeq files and issues.

* Feature improves

- Embed media (pictures, video and audio) as well
- Query and embed provided URLs in the text info
- Include URLs to the initial sources found with RAG
- Allow querying only given resources e.g. "What's statuses of the current projects with aishift in GitHub issues"
